{"ast":null,"code":"var _jsxFileName = \"/home/shambashib2000/Desktop/Projects/PocketBook/note-keeper/src/components/ListNotes.js\";\nimport { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport moment from 'moment'; //moment is a JavaScript date library for parsing, validating, manipulating, and formatting dates. \n//we use a class component because our notes will consits of states and inheritance from a parent component \n// which will pass properties down the functional component via props.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ListNotes extends Component {\n  // will render date to be displayed of note that was last added/edited.\n  renderFormattedDate(date) {\n    return moment(date).format('DD MM YYYY');\n  }\n\n  render() {\n    // if there are no notes to list, we will display a div with a \n    // a message.\n    if (!this.props.notes || this.props.notes.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-notes\",\n        children: \"Oops! It seems that you have no notes! Try adding one? \\uD83D\\uDE0A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this);\n    } // if there are notes to list, we will\n    // display a div with the div with notes.\n\n\n    const listItems = this.props.notes.map(note =>\n    /*#__PURE__*/\n    // nav link to the div of respective note without displaying \n    // the id.\n    _jsxDEV(NavLink, {\n      activeClassName: \"active\",\n      to: `/note/${note.id}`,\n      className: \"list-group-item\",\n      onClick: this.props.viewNote.bind(this, note.id),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-truncate primary\",\n        children: note.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"font-weight-light font-italic small\",\n        children: this.renderFormattedDate(note.date)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }, this)]\n    }, note.id.toString(), true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)); // Displays the notes as a list\n\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: listItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this);\n  }\n\n} // exports for use in other files\n\n\nexport default ListNotes;","map":{"version":3,"sources":["/home/shambashib2000/Desktop/Projects/PocketBook/note-keeper/src/components/ListNotes.js"],"names":["Component","NavLink","moment","ListNotes","renderFormattedDate","date","format","render","props","notes","length","listItems","map","note","id","viewNote","bind","title","toString"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,OAAT,QAAwB,kBAAxB;AAEA,OAAOC,MAAP,MAAmB,QAAnB,C,CAEA;AACA;AACA;;;;AAGA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAC9B;AACAI,EAAAA,mBAAmB,CAACC,IAAD,EAAM;AACrB,WAAOH,MAAM,CAACG,IAAD,CAAN,CAAaC,MAAb,CAAoB,YAApB,CAAP;AACH;;AACDC,EAAAA,MAAM,GAAG;AACL;AACA;AAEA,QAAG,CAAC,KAAKC,KAAL,CAAWC,KAAZ,IAAqB,KAAKD,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,KAA4B,CAApD,EAAuD;AACnD,0BAAQ;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAR;AACH,KANI,CAOL;AACA;;;AACA,UAAMC,SAAS,GAAG,KAAKH,KAAL,CAAWC,KAAX,CAAiBG,GAAjB,CAAsBC,IAAD;AAAA;AACnC;AACA;AACA,YAAC,OAAD;AAAS,MAAA,eAAe,EAAC,QAAzB;AAAkC,MAAA,EAAE,EAAG,SAAQA,IAAI,CAACC,EAAG,EAAvD;AACI,MAAA,SAAS,EAAC,iBADd;AAGI,MAAA,OAAO,EAAE,KAAKN,KAAL,CAAWO,QAAX,CAAoBC,IAApB,CAAyB,IAAzB,EAA+BH,IAAI,CAACC,EAApC,CAHb;AAAA,8BAKE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA,kBAAwCD,IAAI,CAACI;AAA7C;AAAA;AAAA;AAAA;AAAA,cALF,eAOE;AAAK,QAAA,SAAS,EAAC,qCAAf;AAAA,kBAAsD,KAAKb,mBAAL,CAAyBS,IAAI,CAACR,IAA9B;AAAtD;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA,OAESQ,IAAI,CAACC,EAAL,CAAQI,QAAR,EAFT;AAAA;AAAA;AAAA;AAAA,YAHc,CAAlB,CATK,CAsBL;;AACA,wBAAQ;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA,gBAA4BP;AAA5B;AAAA;AAAA;AAAA;AAAA,YAAR;AACH;;AA7B6B,C,CAgClC;;;AACA,eAAeR,SAAf","sourcesContent":["import { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport moment from 'moment';\n\n//moment is a JavaScript date library for parsing, validating, manipulating, and formatting dates. \n//we use a class component because our notes will consits of states and inheritance from a parent component \n// which will pass properties down the functional component via props.\n\n\nclass ListNotes extends Component {\n    // will render date to be displayed of note that was last added/edited.\n    renderFormattedDate(date){\n        return moment(date).format('DD MM YYYY');\n    }\n    render() {\n        // if there are no notes to list, we will display a div with a \n        // a message.\n\n        if(!this.props.notes || this.props.notes.length === 0) {\n            return (<div className=\"no-notes\">Oops! It seems that you have no notes! Try adding one? ðŸ˜Š</div>)\n        }\n        // if there are notes to list, we will\n        // display a div with the div with notes.\n        const listItems = this.props.notes.map((note) =>\n            // nav link to the div of respective note without displaying \n            // the id.\n            <NavLink activeClassName='active' to={`/note/${note.id}`}\n                className=\"list-group-item\"\n                key={note.id.toString()}\n                onClick={this.props.viewNote.bind(this, note.id)}>\n              {/*Show Note title */}\n              <div className=\"text-truncate primary\">{note.title}</div>\n              {/* Show note date */}\n              <div className=\"font-weight-light font-italic small\">{this.renderFormattedDate(note.date)}</div>\n            </NavLink>   \n        );\n        // Displays the notes as a list\n        return (<ul className=\"list-group\">{listItems}</ul>);\n    }\n    \n}\n// exports for use in other files\nexport default ListNotes;\n"]},"metadata":{},"sourceType":"module"}